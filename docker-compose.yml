version: '3'

services:
  stackstorm:
    image: umccr/stackstorm:latest
    container_name: stackstorm
    depends_on:
      - mongo
      - redis
      - postgres
      - rabbitmq
    expose:
      - "80"
    networks:
      - public
      - private
      - webproxy
    env_file:
      - /mnt/stackstorm-data/conf/stackstorm.env
      - /mnt/stackstorm-data/conf/mongo.env
      - /mnt/stackstorm-data/conf/rabbitmq.env
      - /mnt/stackstorm-data/conf/postgres.env
      - /mnt/stackstorm-data/conf/redis.env
      - /mnt/stackstorm-data/conf/nginx-letsencrypt-proxy.env
    volumes:
      - stackstorm-log-volume:/var/log
      - ./runtime/entrypoint.d:/st2-docker/entrypoint.d
      - ./runtime/st2.d:/st2-docker/st2.d
      - /etc/localtime:/etc/localtime:ro
      - /mnt/stackstorm-data/container/.bash_aliases:/root/.bash_aliases
      - /mnt/stackstorm-data/conf/stackstorm.env:/st2-docker/env
      - /mnt/stackstorm-data/configs:/opt/stackstorm/configs
      - /mnt/stackstorm-data/chatops/st2chatops.env:/opt/stackstorm/chatops/st2chatops.env
      - /mnt/stackstorm-data/st2.conf:/etc/st2/st2.conf
      - /mnt/stackstorm-data/ssh/stanley_rsa:/home/stanley/.ssh/stanley_rsa
      - /mnt/stackstorm-data/ssh/stanley_rsa.pub:/home/stanley/.ssh/stanley_rsa.pub
    dns_search: .
    dns: 8.8.8.8

### External Services

  mongo:
    image: mongo:3.4
    container_name: mongo
    env_file:
      - /mnt/stackstorm-data/conf/mongo.env
    networks:
      - private
    volumes:
      - mongo-volume:/data/db
      - mongo-configdb-volume:/data/configdb
      - /etc/localtime:/etc/localtime:ro
    dns_search: .
    dns: 8.8.8.8
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    env_file:
      - /mnt/stackstorm-data/conf/rabbitmq.env
    networks:
      - private
    volumes:
      - rabbitmq-volume:/var/lib/rabbitmq
      - /etc/localtime:/etc/localtime:ro
    dns_search: .
    dns: 8.8.8.8
  postgres:
    image: postgres:latest
    container_name: postgres
    env_file:
      - /mnt/stackstorm-data/conf/postgres.env
    networks:
      - private
    volumes:
      - postgres-volume:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    dns_search: .
    dns: 8.8.8.8
  redis:
    image: redis:latest
    container_name: redis
    env_file:
      - /mnt/stackstorm-data/conf/redis.env
    networks:
      - private
    volumes:
      - redis-volume:/data
      - /etc/localtime:/etc/localtime:ro
    dns_search: .
    dns: 8.8.8.8
    command: [
      "bash", "-c",
      '
       docker-entrypoint.sh
       --requirepass "$$REDIS_PASSWORD"
      '
    ]

### nginx letsencrypt proxy setup
  nginx-web:
    image: nginx
    labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    container_name: ${NGINX_WEB:-nginx-web}
    restart: always
    ports:
      - "${IP:-0.0.0.0}:80:80"
      - "${IP:-0.0.0.0}:443:443"
    networks:
      - webproxy
    volumes:
      - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:ro
      - ${NGINX_FILES_PATH:-./data}/htpasswd:/etc/nginx/htpasswd:ro
    logging:
      options:
        max-size: ${NGINX_WEB_LOG_MAX_SIZE:-4m}
        max-file: ${NGINX_WEB_LOG_MAX_FILE:-10}

  nginx-gen:
    image: jwilder/docker-gen
    command: -notify-sighup ${NGINX_WEB:-nginx-web} -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: ${DOCKER_GEN:-nginx-gen}
    restart: always
    networks:
      - webproxy
    volumes:
      - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:ro
      - ${NGINX_FILES_PATH:-./data}/htpasswd:/etc/nginx/htpasswd:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./letsencrypt-proxy/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    logging:
      options:
        max-size: ${NGINX_GEN_LOG_MAX_SIZE:-2m}
        max-file: ${NGINX_GEN_LOG_MAX_FILE:-10}

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: ${LETS_ENCRYPT:-nginx-letsencrypt}
    restart: always
    networks:
      - webproxy
    volumes:
      - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_DOCKER_GEN_CONTAINER: ${DOCKER_GEN:-nginx-gen}
      NGINX_PROXY_CONTAINER: ${NGINX_WEB:-nginx-web}
    logging:
      options:
        max-size: ${NGINX_LETSENCRYPT_LOG_MAX_SIZE:-2m}
        max-file: ${NGINX_LETSENCRYPT_LOG_MAX_FILE:-10}


volumes:
  # TODO: move to 'external' volumes, i.e. not managed, but only used by docker
  mongo-volume:
    driver: rexray/ebs:latest
    driver_opts:
      size: 5
  mongo-configdb-volume:
    driver: rexray/ebs:latest
    driver_opts:
      size: 5
  postgres-volume:
    driver: rexray/ebs:latest
    driver_opts:
      size: 5
  rabbitmq-volume:
    driver: rexray/ebs:latest
    driver_opts:
      size: 5
  redis-volume:
    driver: rexray/ebs:latest
    driver_opts:
      size: 5
  stackstorm-log-volume:
    driver: rexray/ebs:latest
    driver_opts:
      size: 5

networks:
  public:
    driver: bridge
  private:
    driver: bridge
  webproxy:
    driver: bridge
